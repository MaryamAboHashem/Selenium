import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.testng.Assert;
import org.testng.annotations.AfterClass;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;

public class LoginPageTest {

    private WebDriver driver;

    @BeforeClass
    public void setUp() {
        // Set up WebDriver (assuming you have ChromeDriver installed)
        System.setProperty("webdriver.chrome.driver", "path/to/chromedriver");
        driver = new ChromeDriver();
        driver.get("https://www.saucedemo.com/");
    }

    @Test
    public void testUsernameAndPasswordFields() {
        // Verify username and password fields
        WebElement usernameField = driver.findElement(By.id("user-name"));
        WebElement passwordField = driver.findElement(By.id("password"));
        WebElement loginButton = driver.findElement(By.id("login-button"));

        Assert.assertTrue(usernameField.isDisplayed());
        Assert.assertTrue(passwordField.isDisplayed());
        Assert.assertTrue(loginButton.isDisplayed());
    }

    @Test
    public void testValidCredentials() {
        // Use valid credentials
        driver.findElement(By.id("user-name")).sendKeys("standard_user");
        driver.findElement(By.id("password")).sendKeys("secret_sauce");
        driver.findElement(By.id("login-button")).click();

        // Verify successful login
        WebElement swagLabsText = driver.findElement(By.xpath("//div[contains(text(), 'Swag Labs')]"));
        Assert.assertTrue(swagLabsText.isDisplayed());
    }

    @Test
    public void testInvalidCredentials() {
        // Use invalid credentials
        driver.findElement(By.id("user-name")).sendKeys("invalid_user");
        driver.findElement(By.id("password")).sendKeys("wrong_password");
        driver.findElement(By.id("login-button")).click();

        // Verify error message
        WebElement errorMessage = driver.findElement(By.className("error-message-container"));
        Assert.assertTrue(errorMessage.getText().contains("Username and password do not match"));
    }

    @Test
    public void testEmptyCredentials() {
        // Leave username field empty
        driver.findElement(By.id("password")).sendKeys("some_password");
        driver.findElement(By.id("login-button")).click();

        // Verify username required error message
        WebElement usernameRequiredMessage = driver.findElement(By.className("error-message-container"));
        Assert.assertTrue(usernameRequiredMessage.getText().contains("Username is required"));

        // Leave password field empty
        driver.findElement(By.id("user-name")).sendKeys("some_user");
        driver.findElement(By.id("login-button")).click();

        // Verify password required error message
        WebElement passwordRequiredMessage = driver.findElement(By.className("error-message-container"));
        Assert.assertTrue(passwordRequiredMessage.getText().contains("Password is required"));
    }

    @AfterClass
    public void tearDown() {
        driver.quit();
    }
}
